/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2015-05-01 22:11:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package game;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.Random;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.Connection;
import java.util.concurrent.Executors;
import javax.xml.ws.spi.http.HttpExchange;
import java.io.*;
import java.net.*;
import java.sql.Timestamp;

public final class rungame_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.util.Random");
    _jspx_imports_classes.add("java.sql.SQLException");
    _jspx_imports_classes.add("javax.xml.ws.spi.http.HttpExchange");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.util.concurrent.Executors");
    _jspx_imports_classes.add("java.sql.DriverManager");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.Statement");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Game Page</title>\n");
      out.write("    <script type=\"text/JavaScript\">\n");
      out.write("<!--\n");
      out.write("function timedRefresh(timeoutPeriod) {\n");
      out.write("   \n");
      out.write("\tsetTimeout(\"location.reload(true);\",timeoutPeriod);\n");
      out.write("}\n");
      out.write("\n");
      out.write("//   -->\n");
      out.write("</script>\n");
      out.write("    </head>\n");
      out.write("    <body onload=\"JavaScript:timedRefresh(2900);\">\n");
      out.write("    \n");
      out.write("     ");

     
    Class.forName("com.mysql.jdbc.Driver");
    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/isa681","ISA681", "World@123");
    PreparedStatement st ;
    ResultSet rs = null;
    String s = request.getParameter("button");
    System.out.println("session.getAttribute"+session.getAttribute("reload")+"button name"+s);
    
 if((request.getParameter("button").equals("NEW"))&& (session.getAttribute("reloadcount")==null))
{
	st = con.prepareStatement("insert into userinfo (FirstPlayer_Id, SecondPlayer_Id, Status, Moves) values (? ,0,'Waiting','' )");
    st.setInt(1, Integer.parseInt(""+session.getAttribute("userid")));
	int i = st.executeUpdate();

	session.setAttribute("gameid", session.getAttribute("userid"));
    session.setAttribute("reloadcount", 1);
   
    con.close();
}
 

 else if(request.getParameter("button").equals("JOIN") && (session.getAttribute("reload")==null))
 {
     session.setAttribute("gameid", Integer.parseInt(request.getParameter("gameid")));
      st = con.prepareStatement("SELECT SecondPlayer_Id FROM userinfo where Status = 'Waiting' and FirstPlayer_Id = ?");
     st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
     rs = st.executeQuery();
	
     rs.next();
          
     if(rs.getInt(1)==0)
     {
    	st = con.prepareStatement("UPDATE userinfo SET SecondPlayer_Id = ? , Status = 'Ready' where  Status = 'Waiting' and FirstPlayer_Id = ? ");
        st.setInt(1, Integer.parseInt(""+session.getAttribute("userid")));
        st.setInt(2, Integer.parseInt(""+session.getAttribute("gameid")));
        st.executeUpdate();
     }
       session.setAttribute("reload", 1);
 }
 
    else 
 {
    
 st = con.prepareStatement("SELECT count(*) FROM userinfo where FirstPlayer_Id = ? and Status = 'Waiting' ");
 st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
 rs = st.executeQuery();
 
 rs.next();
   if(rs.getInt(1)==1)
   {
   out.println("<center>");
   out.println("<h1> OTher Player is Joining!!</h1>");
   out.println("</center>");
   }

   st = con.prepareStatement("SELECT count(*) FROM userinfo where FirstPlayer_Id = ? and Status = 'Ready' ");
   st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
   rs = st.executeQuery();
   
   rs.next();
   
   if(rs.getInt(1)==1)
   {
   rs.close();
   out.println("<center>");
   out.println("<h1> Start Game </h1>"); 
      out.write("\n");
      out.write(" <form  action=\"updategameresult_db.jsp\" target=\"_top\" > \n");
      out.write("     <input name =button type=submit value=\"ExitGame\"  > \n");
      out.write(" </form>\n");
      out.write("       ");

   if(session.getAttribute("intial")==null)
   {
	   st = con.prepareStatement("SELECT count(*) FROM gamedata where Game_Id = ? ");
	   st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
	   rs=st.executeQuery();
   
	   rs.next();
   
	   if(rs.getInt(1)==0)
   {
   String CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
   Random rnd = new Random();
   int index = (int) (rnd.nextFloat() * CHARS.length());
	
   st = con.prepareStatement("insert into gamedata values (?, ?, 0)");
   st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
   st.setString(2, "Letter : "+CHARS.charAt(index));		   
   st.executeUpdate();
   
   }
	   
	   st = con.prepareStatement("insert into userpoints values (? , 0, 'A')");
	   st.setInt(1, Integer.parseInt(""+session.getAttribute("userid")));
	   
      int updt= st.executeUpdate();
  	   session.setAttribute("intial", "no");
   
   }
 out.print("<textarea readonly rows=10 cols=50>");
 st = con.prepareStatement("SELECT WordList FROM gamedata where Game_Id = ?");
 st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
 rs = st.executeQuery();
  
 rs.next();
 String words [] = rs.getString(1).split("&");
   for(int len =0; len<words.length;len++)
   {
   out.print(""+words[len]);
   out.print("\n");
   }
   out.print("</textarea>"); 
   String temp [] = words[words.length-1].split(":");
   String tempWord = temp[0]+":"+temp[1];
   out.print("<label>Latest word: </label> <input type=text value="+  temp[1]+" readonly>");
   
   st = con.prepareStatement("select score from userpoints where User_Id = ?");
   st.setInt(1, Integer.parseInt(""+session.getAttribute("userid")));
   rs = st.executeQuery();
   
   rs.next();
   out.print(""+"Game Points : "+rs.getInt(1));
   out.println("</center>");
   }
   
   else 
   {
	   st = con.prepareStatement("select Max(Id) from userinfo where FirstPlayer_Id = ?");   
	   st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
       rs=st.executeQuery();
   
    rs.next();
    
    st = con.prepareStatement("select Status from userinfo where Id = ? ");
    st.setInt(1, rs.getInt(1));
    rs=st.executeQuery();
    
    if(rs.next())
    {
    
    if(rs.getString(1).equals("Paused"))
    {
    	if(session.getAttribute("intialcheck")==null)
    	{
    		st = con.prepareStatement("insert into stopgame values (? , Now())");
    		st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
    		st.executeUpdate();
    	    session.setAttribute("intialcheck", "no");
    	}
    	
    	else
    	{
    		st = con.prepareStatement("SELECT TIMESTAMPDIFF(MINUTE, S_Time, NOW()) as timediff FROM stopgame");
    		rs = st.executeQuery();
    		rs.next();
    		if(Integer.parseInt(rs.getString(1))>=5)
    		{
    		      st=con.prepareStatement("delete from pausedgame where GameId = ? ");
    		      st.setInt(1, Integer.parseInt(""+session.getAttribute("gameid")));
    		      st.executeUpdate();
    		      
    			  out.print(""+ "Game has been completed and you won. Wanna Play more then go to other server");
    		      out.println("<form  action='updategameresult_db.jsp' target='_top' >");
    		      out.println("<input name =button type=submit value='ExitGame'>"); 
    		      out.println("</form>");
    		
    		}
    		else
    		{
    			out.println(""+"Every others have left the game so you will be winner in next 5 min on condtion if no one joins. Present time completed is : "+rs.getString(1));	
    	    			
    		}
    	}
    
    }
    
    if(rs.getString(1).split("&")[0].equals("Compeleted"))
   {
    
       st = con.prepareStatement("Select user_name from usersrecord where Id = ?");
       st.setInt(1, Integer.parseInt(rs.getString(1).split("&")[1]));
       rs=st.executeQuery();
    
       rs.next();
       out.print(""+ "Game has been completed and the winner is "+rs.getString(1));
      out.println("<form  action='updategameresult_db.jsp' target='_top' >");
      out.println("<input name =button type=submit value='ExitGame'>"); 
      out.println("</form>");
      
  
   }
   }    
      
   }
   rs.close();
  // con.close();
 
   }
 
 
      out.write("\n");
      out.write("    \n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
